单例模式：
重点：
１、私有化构造器
２、保证线程安全，
３、延迟加载
４、防止序列化和反序列化破坏单例
５、防止反射攻击

单例模式的方式：
１、饿汉式：加载类的时候先初始化

２、懒汉式：调用的时候初始化
    简单的懒汉式，无法保证线程安全
    双重锁懒汉式，线程安全，但是代码不优雅,
    静态内部类懒汉式，ＪＶＭ底层的执行逻辑，完美避免了线程安全问题，线程最优的方式，针对序列化要在构造里手动抛异常

３、注册式
    枚举式:从ｊｄｋ层面就为枚举提供不被序列化和反序列化破坏
    容器式:
        Container: 方便用户管理，其实属于懒加载，存在线程安全，性能存在一定的影响，但是却可以提升用户体验，

    ThreadLocal: 伪线程
    保证线程内部的全局唯一，且天生线程安全



优点：
    １、在内存中只有一个实例，减少内存开销
    ２、可避免对资源的多重占用
    ３、设置全局访问点，严格控制访问

缺点：
    １、没有接口，扩展困难
    ２、如果要扩展单例对象，只有修改代码，没有其他途径，不符合开不原则


能够破坏单例的方式
１、反射
２、序列化


